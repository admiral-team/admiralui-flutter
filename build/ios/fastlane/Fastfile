fastlane_require 'dotenv'
require_relative 'build_info'
require_relative 'version'
require_relative 'utils'
require_relative 'appcenter'
require_relative 'github'
require_relative 'release'
require_relative 'deploy'
require_relative 'telegram'
require 'fastlane'

before_all do
  Dotenv.overload('.env', '.env.secret')
end

# Deploy Methods
lane :deploy_appcenter_andoid_dev do |options|
  deploy_appcenter_andoid_dev(options: options)
  send_android_telegram_message(options: options, build_info_hash: lane_context[SharedValues::APPCENTER_BUILD_INFORMATION])
end

lane :deploy_appcenter_dev do |options|
  deploy_appcenter_dev(options: options)
  send_ios_telegram_message(options: options, build_info_hash: lane_context[SharedValues::APPCENTER_BUILD_INFORMATION])
end

#Github
lane :send_build_failed_info do |options|
  send_build_failed_info(options: options, build_info_hash: lane_context[SharedValues::APPCENTER_BUILD_INFORMATION])
end

lane :get_all_github_request_builds_and_remove do |options|
  get_all_github_request_builds_and_remove(options: options)
end

lane :link_issue do |options|
  link_issue(options: options)
end

lane :unlock_secrets_keychain do |options|
  unlock_secrets_keychain(options: options)
end

lane :check_close_release_issue do |options|
  check_close_release_issue()
end

#Supporting Methods
lane :increment_app_version do |options|
  increment_app_version(options: options)
end

lane :set_version do |options|
  set_version(options: options)
end

lane :finish_release_version do |options|
  finish_release_version(options: options)
end

lane :start_next_release_version do
  start_next_release_version(options: options)
end
