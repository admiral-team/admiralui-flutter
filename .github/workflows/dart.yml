name: Build Flutter App
on:
  push:
    branches: [ main ]
  pull_request:
    types: [ 'opened', 'synchronize', 'reopened', 'closed']
    branches: [ 'main', 'develop', 'feature/**', 'rc/**' ]
  workflow_dispatch:

jobs:
  set-pull-request:
    name: Set Pull Request
    runs-on: [ self-hosted, main, flutter ]
    if: github.event.action == 'opened'
    env:
      API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
      APPCENTER_API_TOKEN_IOS_DEV: ${{ secrets.APPCENTER_API_TOKEN_IOS_DEV }}
      APPCENTER_API_TOKEN_IOS_PROD: ${{ secrets.APPCENTER_API_TOKEN_IOS_PROD }}
      CI_PASSWORD:  ${{ secrets.CI_PASSWORD }}
      PUll_REQUEST_NUMBER: ${{ github.event.number }}
      CI_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TELEGRAM_DEV_CHAT_ID: ${{ secrets.TELEGRAM_DEV_CHAT_ID }}
      TELEGRAM_API_TOKEN: ${{ secrets.TELEGRAM_API_TOKEN }}
      APPCENTER_API_TOKEN_ANDROID_DEV: ${{ secrets.APPCENTER_API_TOKEN_ANDROID_DEV }}
      APPCENTER_API_TOKEN_ANDROID_PROD: ${{ secrets.APPCENTER_API_TOKEN_ANDROID_PROD }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Fastlane Dependencies
        run: cd build/ios/fastlane && bundle install && bundle update
      - name: Link issue
        run: cd build/ios/fastlane && bundle exec fastlane link_issue issue_name:${{ github.head_ref }} pull_request_number:${{ github.event.number }}

  
  setup:
    name: Setup Environment
    runs-on: [ self-hosted, main, flutter ]
    env:
      API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
      APPCENTER_API_TOKEN_IOS_DEV: ${{ secrets.APPCENTER_API_TOKEN_IOS_DEV }}
      APPCENTER_API_TOKEN_IOS_PROD: ${{ secrets.APPCENTER_API_TOKEN_IOS_PROD }}
      CI_PASSWORD:  ${{ secrets.CI_PASSWORD }}
      PUll_REQUEST_NUMBER: ${{ github.event.number }}
      CI_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TELEGRAM_DEV_CHAT_ID: ${{ secrets.TELEGRAM_DEV_CHAT_ID }}
      TELEGRAM_API_TOKEN: ${{ secrets.TELEGRAM_API_TOKEN }}
      APPCENTER_API_TOKEN_ANDROID_DEV: ${{ secrets.APPCENTER_API_TOKEN_ANDROID_DEV }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.8'
          channel: 'stable'
          architecture: x64
          distribution: 'zulu'
          java-version: '11'
      - run: flutter --version
      - name: Analyze Flutter env
        run: flutter doctor -v
      - name: Check Lint issues
        run: flutter analyze --fatal-infos
      - name: Install dependencies
        run: flutter pub get
      - name: Check If Setup Failed
        if: ${{ failure() }}
        run: |
            cd build/ios/fastlane && bundle install && bundle update &&
             bundle exec fastlane send_build_failed_info issue_name:${{ github.head_ref }} telegram_token:"$TELEGRAM_API_TOKEN" telegram_chat_id:"$TELEGRAM_DEV_CHAT_ID" build_url:"${{ github.event.number }}"

  check-release-issue:
      name: Check Release Issue
      needs: setup
      runs-on: [ self-hosted, main, flutter ]
      env:
          API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
          APPCENTER_API_TOKEN_IOS_DEV: ${{ secrets.APPCENTER_API_TOKEN_IOS_DEV }}
          APPCENTER_API_TOKEN_IOS_PROD: ${{ secrets.APPCENTER_API_TOKEN_IOS_PROD }}
          CI_PASSWORD:  ${{ secrets.CI_PASSWORD }}
          PUll_REQUEST_NUMBER: ${{ github.event.number }}
          CI_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TELEGRAM_DEV_CHAT_ID: ${{ secrets.TELEGRAM_DEV_CHAT_ID }}
          TELEGRAM_API_TOKEN: ${{ secrets.TELEGRAM_API_TOKEN }}
          APPCENTER_API_TOKEN_ANDROID_DEV: ${{ secrets.APPCENTER_API_TOKEN_ANDROID_DEV }}
          APPCENTER_API_TOKEN_ANDROID_PROD: ${{ secrets.APPCENTER_API_TOKEN_ANDROID_PROD }}
      steps:
          - name: Install Fastlane Dependencies
            run: cd build/ios/fastlane && bundle install && bundle update
          - name: Remove all builds from request
            run: cd build/ios/fastlane && bundle exec fastlane check_close_release_issue
  

